<%#display article title and body%>
<h1 ><%= @article.title %></h1>

<p><%= @article.body %></p>


<%#link to editing pg for this article%>
<ul>
  <li><%= link_to "Edit", edit_article_path(@article) %></li>

  <%#link to destroy this article, makes DELETE /articles/:id reqst instead of GET%>
  <%#data: option causes confirmation dialog to appear when link is clicked. If user cancels, rqst is aborted. 
  Both of these options powered by feature of Rails called Unobtrusive JavaScript (UJS). JavaScript file that implements these is incl in Rails apps%>
  <li><%= link_to "Destroy", article_path(@article),
                  method: :delete, 
                  data: { confirm: "Are you sure?" } %></li>
</ul>

<%#display any comments that are linked to this article%>
<h2>Comments</h2>

<%#render partial in _comment.html.erb once for each comment in @article.comments. render method iterates over @article.comments collection, 
assigns each comment to local var named the same as the partial, 'comment', which is then available in partial for us to show.%>
<%= render @article.comments %>



<%#adds form that creates new comment by calling CommentsController create action. form_with call here uses array, which will build nested route, 
such as /articles/1/comments%>
<h2>Add a comment:</h2>

<%#defines partial template we want to render, comments/form. Rails sees slash, realizes want to render _form.html.erb file in app/views/comments dir%>
<%= render 'comments/form' %>


